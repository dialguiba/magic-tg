{"version":3,"sources":["components/Footer.js","components/LanguageContext.js","assets/loading.svg","components/Gallery.js","assets/espana.svg","assets/francia.svg","assets/alemania.svg","assets/italia.svg","assets/japon.svg","assets/brasil.svg","assets/rusia.svg","assets/china.svg","assets/estados-unidos.svg","components/Nav.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","className","LanguageContext","createContext","LanguageProvider","props","useState","language","setLanguage","Provider","value","children","Cards","cardsOrig","setCardsOrig","cards","setCards","searcher","setSearcher","searcherComplete","setSearcherComplete","page","setPage","loaded","setLoaded","useContext","useEffect","mtg","card","where","pageSize","then","cartas","console","log","all","name","on","result","prevState","array3","map","carta","foreignNames","y","filter","x","index","length","undefined","id","onChange","e","target","type","onClick","style","width","src","imageUrl","alt","loading","Nav","spanish","french","german","italian","japanese","portuguese","russian","chinese","english","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eac28b8e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return <div className=\"footer\"></div>;\n}\n\nexport default Footer;\n","import React, { useState, createContext } from \"react\";\n\nexport const LanguageContext = createContext();\n\nexport const LanguageProvider = (props) => {\n  const [language, setLanguage] = useState(\"\");\n  return <LanguageContext.Provider value={[language, setLanguage]}>{props.children}</LanguageContext.Provider>;\n};\n","export default __webpack_public_path__ + \"static/media/loading.28fd4e2d.svg\";","import React, { useState, useEffect, useContext } from \"react\";\n\nimport \"./Gallery.css\";\nimport mtg from \"mtgsdk\";\nimport { LanguageContext } from \"./LanguageContext\";\nimport loading from \"../assets/loading.svg\";\n\nfunction Cards() {\n  const [cardsOrig, setCardsOrig] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [searcher, setSearcher] = useState(\"\");\n  const [searcherComplete, setSearcherComplete] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [loaded, setLoaded] = useState(false);\n  const [language] = useContext(LanguageContext);\n\n  useEffect(() => {\n    /* axios.get(\"https://api.magicthegathering.io/v1/cards?pageSize=6\").then((res) => {\n      console.log(res.data.cards);\n      setCards(res.data.cards);\n      setLoaded(true);\n    }); */\n    /*  mtg.card.where({ supertypes: \"legendary\", subtypes: \"goblin\" }).then((cards) => {\n      console.log(cards); // \"Squee, Goblin Nabob\"\n    }); */\n    if (searcherComplete === \"\") {\n      mtg.card.where({ pageSize: 8, page: page }).then((cartas) => {\n        setCardsOrig(cartas);\n        setCards(cartas);\n        setLoaded(true);\n      });\n    } else {\n      console.log(\"Searcher defined\");\n      setLoaded(false);\n      setCardsOrig([]);\n      setCards([]);\n      mtg.card.all({ name: searcherComplete }).on(\"data\", (result) => {\n        setCardsOrig((prevState) => [...prevState, result]);\n        setCards((prevState) => [...prevState, result]);\n        setLoaded(true);\n      });\n    }\n  }, [page, searcherComplete]);\n\n  useEffect(() => {\n    if (language !== \"\") {\n      let array = cardsOrig.map((carta) => carta.foreignNames);\n\n      let array2 = array.map((y) => y.filter((x) => x.language === language));\n\n      let array3 = array2.map((y) => y[0]);\n\n      cardsOrig.map((carta, index) => {\n        if (carta.foreignNames.length === 0 || array3[index] === undefined) {\n          return (array3[index] = carta);\n        } else {\n          return (array3[index].id = carta.id);\n        }\n      }); /* SET THE ID CARD */\n\n      setCards(array3);\n    } else {\n      setCards(cardsOrig);\n    }\n  }, [language]);\n\n  function nextPage() {\n    setPage((prevState) => prevState + 1);\n  }\n\n  function previousPage() {\n    setPage((prevState) => (prevState !== 0 ? prevState - 1 : prevState));\n  }\n\n  function handleSearch() {\n    setSearcherComplete(searcher);\n  }\n\n  return (\n    <div className=\"gallery\">\n      <div>\n        <input value={searcher} onChange={(e) => setSearcher(e.target.value)} className=\"gallery__input\" type=\"text\" name=\"\" id=\"\" />\n        <button onClick={handleSearch}>Search (In English)</button>\n      </div>\n\n      {loaded ? (\n        <>\n          <div className=\"gallery__cards-group\">\n            {cards.map((card) => (\n              <div key={card.id} className=\"gallery__cards-group__card\">\n                <h3>{card.name}</h3>\n                <img\n                  style={{ width: \"60%\" }}\n                  src={card.imageUrl ? card.imageUrl : \"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=140485&type=card\"}\n                  alt=\"\"\n                />\n              </div>\n            ))}\n          </div>\n          <button onClick={previousPage}>Previous Page</button>\n          <button onClick={nextPage}>Next Page</button>\n        </>\n      ) : (\n        <div className=\"gallery__loading\">\n          <img src={loading} alt=\"loading\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Cards;\n","export default __webpack_public_path__ + \"static/media/espana.32e1e489.svg\";","export default __webpack_public_path__ + \"static/media/francia.40c79af5.svg\";","export default __webpack_public_path__ + \"static/media/alemania.cf16b1b6.svg\";","export default __webpack_public_path__ + \"static/media/italia.2b31e5a9.svg\";","export default __webpack_public_path__ + \"static/media/japon.382df14f.svg\";","export default __webpack_public_path__ + \"static/media/brasil.100516bc.svg\";","export default __webpack_public_path__ + \"static/media/rusia.c89ed68a.svg\";","export default __webpack_public_path__ + \"static/media/china.09a74fe5.svg\";","export default __webpack_public_path__ + \"static/media/estados-unidos.c29455bd.svg\";","import React, { useContext } from \"react\";\nimport \"./Nav.css\";\nimport { LanguageContext } from \"./LanguageContext\";\nimport spanish from \"../assets/espana.svg\";\nimport french from \"../assets/francia.svg\";\nimport german from \"../assets/alemania.svg\";\nimport italian from \"../assets/italia.svg\";\nimport japanese from \"../assets/japon.svg\";\nimport portuguese from \"../assets/brasil.svg\";\nimport russian from \"../assets/rusia.svg\";\nimport chinese from \"../assets/china.svg\";\nimport english from \"../assets/estados-unidos.svg\";\n\nfunction Nav() {\n  const [language, setLanguage] = useContext(LanguageContext);\n\n  return (\n    <div className=\"nav\">\n      <img className=\"nav__icon\" src={spanish} alt=\"spanish\" onClick={() => setLanguage(\"Spanish\")} />\n      <img className=\"nav__icon\" src={french} alt=\"french\" onClick={() => setLanguage(\"French\")} />\n      <img className=\"nav__icon\" src={german} alt=\"spanish\" onClick={() => setLanguage(\"German\")} />\n      <img className=\"nav__icon\" src={italian} alt=\"spanish\" onClick={() => setLanguage(\"Italian\")} />\n      <img className=\"nav__icon\" src={japanese} alt=\"spanish\" onClick={() => setLanguage(\"Japanese\")} />\n      <img className=\"nav__icon\" src={portuguese} alt=\"spanish\" onClick={() => setLanguage(\"Portuguese (Brazil)\")} />\n      <img className=\"nav__icon\" src={russian} alt=\"spanish\" onClick={() => setLanguage(\"Russian\")} />\n      <img className=\"nav__icon\" src={chinese} alt=\"spanish\" onClick={() => setLanguage(\"Chinese Simplified\")} />\n      <img className=\"nav__icon\" src={english} alt=\"spanish\" onClick={() => setLanguage(\"\")} />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.scss\";\nimport Footer from \"./Footer\";\nimport Gallery from \"./Gallery\";\nimport Nav from \"./Nav\";\nimport { LanguageProvider } from \"./LanguageContext\";\n\nfunction App() {\n  return (\n    <LanguageProvider>\n      <div className=\"App\">\n        <Nav />\n        <Gallery />\n        <Footer />\n      </div>\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}